[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "rekki"
version = "0.0.1"
description = ""
authors = [{ name = "Lanqing Huang", email = "lqhuang@outlook.com" }]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "BSD-3-Clause" }
dependencies = []

## Build
[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "-e rekki-core @ file:///${PROJECT_ROOT}/rekki-core",
    "-e rekki-service @ file:///${PROJECT_ROOT}/rekki-service",
    "mypy",
    "typing-extensions",
    "black",
    "isort",
    "pytest",
    "pytest-anyio",
]


## Formatter
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # exclude a few common directories in the root of the project
  | \.eggs
  | \.git
  | \.tox
  | \.venv
  | \.env
  | env
  | _build
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_typing = ["typing", "collections.abc"]
sections = [
    "FUTURE",
    "TYPING",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

## Linter
[tool.mypy]
# doc: https://mypy.readthedocs.io/en/stable/config_file.html
# --strict but not --no-implicit-optional
# Import discovery
ignore_missing_imports = true
follow_imports = "normal"
# Platform configuration
# python_version = "3.10"
# Disallow dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_generics = false
disallow_subclassing_any = true
# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# None and Optional handling
no_implicit_optional = false
strict_optional = true
# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
# Miscellaneous strictness flags
implicit_reexport = false
strict_equality = true
# Configuring error messages
show_column_numbers = true
show_error_context = true
show_error_codes = true
# pretty = true  # disable for IDE parser; try add cli option in Makefile
# Incremental mode
cache_fine_grained = true
# Advanced options
warn_incomplete_stub = true
# Miscellaneous
warn_unused_configs = true

[tool.pyright]
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md#main-pyright-config-options
typeCheckingMode = "basic"
reportGeneralTypeIssues = false
# reportPrivateUsage = false

[tool.ruff]
line-length = 88

# Enable rules:
# Pyflakes (F), pycodestyle (E, W), pydocstyle (D), pyupgrade (UP),
# flake8-bandit (S), flake8-bugbear (B), flake8-comprehensions (C4), flake8-datetimez (DTZ), flake8-pytest-style (PT)
# Pylint (PLC, PLE, PLR, PLW), Ruff-specific rules (RUF)
select = ["F", "E", "W", "UP", "S", "B", "C4", "DTZ", "PT"]
extend-select = ["PLC", "PLE", "PLR", "PLW", "RUF"]

ignore = [
    "E501",    # Line too long (95 > 88 characters)
    "S101",    # Use of `assert` detected
    "RUF100",  # Unused `noqa` directive for: E305 (not implemented)
    "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
    "PLR0913", # Too many statements
    "C408",
]

fix = false
#  A list of check code prefixes to consider autofix-able.
fixable = ["F", "E711", "UP", "B"]
unfixable = ["I"]

ignore-init-module-imports = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"] # imported but unused

## Testing
[tool.pytest.ini_options]
norecursedirs = [
    '*.egg',
    '.*',
    'build',
    'dist',
    '__pycache__',
    '__mypy_cache__',
    'node_modules',
    'venv',
    '.venv',
    '.conda-venv',
    'docs',
    'examples',
    'scripts',
]
